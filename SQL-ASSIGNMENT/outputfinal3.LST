SQL> spool
currently spooling to C:\Users\lenovo ideapad130\Downloads\Telegram Desktop\lab102\outputfinal3.LST
SQL> CREATE USER bank3
  2   IDENTIFIED BY 1234;

User created.

SQL> connect
Enter user-name: system
Connected.
SQL> GRANT CREATE VIEW,CONNECT,RESOURCE TO bank3;

Grant succeeded.

SQL> CREATE TABLE Customer (
  2      account_id INT PRIMARY KEY,
  3      first_name VARCHAR2(50) NOT NULL,
  4      last_name VARCHAR2(50) NOT NULL,
  5      address VARCHAR2(100) NOT NULL,
  6      mobile VARCHAR2(20) NOT NULL,
  7      id NUMBER(10) NOT NULL,
  8      balance NUMBER(10, 2) DEFAULT 100 NOT NULL CHECK (balance >= 100)
  9  );

Table created.

SQL> CREATE TABLE Transaction (
  2      transaction_id INT PRIMARY KEY,
  3      from_account_id INT NOT NULL,
  4      to_account_id INT NOT NULL,
  5      transaction_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  6      amount NUMBER(10, 2) NOT NULL,
  7      FOREIGN KEY (from_account_id) REFERENCES Customer(account_id) ON DELETE CASCADE,
  8      FOREIGN KEY (to_account_id) REFERENCES Customer(account_id) ON DELETE CASCADE
  9  );

Table created.

SQL> INSERT INTO Customer (account_id, first_name, last_name, address, mobile, id, balance)
  2  VALUES (1, 'John', 'Doe', '123 Main Street', '123-456-7890', 123456789, 500.00);

1 row created.

SQL> INSERT INTO Customer (account_id, first_name, last_name, address, mobile, id, balance)
  2  VALUES (2, 'Jane', 'Smith', '456 Elm Street', '987-654-3210', 987654321, 1000.00);

1 row created.

SQL> INSERT INTO Customer (account_id, first_name, last_name, address, mobile, id, balance)
  2  VALUES (3, 'Robert', 'Johnson', '789 Oak Street', '555-555-5555', 555555555, 750.00);

1 row created.

SQL> INSERT INTO Customer (account_id, first_name, last_name, address, mobile, id, balance)
  2  VALUES (4, 'Emily', 'Brown', '321 Pine Street', '111-222-3333', 111222333, 1500.00);

1 row created.

SQL> INSERT INTO Transaction (transaction_id, from_account_id, to_account_id, amount)
  2  VALUES (1, 1, 2, 100.00);

1 row created.

SQL> INSERT INTO Transaction (transaction_id, from_account_id, to_account_id, amount)
  2  VALUES (2, 3, 4, 200.00);

1 row created.

SQL> INSERT INTO Transaction (transaction_id, from_account_id, to_account_id, amount)
  2  VALUES (3, 2, 3, 50.00);

1 row created.

SQL> DELETE FROM Customer WHERE account_id = 2;

1 row deleted.

SQL> CREATE INDEX idx_customer_id ON Customer (id);

Index created.

SQL> SELECT * FROM customer WHERE account_id = &account_id;
Enter value for account_id: 3
old   1: SELECT * FROM customer WHERE account_id = &account_id
new   1: SELECT * FROM customer WHERE account_id = 3

ACCOUNT_ID FIRST_NAME                                                           
---------- --------------------------------------------------                   
LAST_NAME                                                                       
--------------------------------------------------                              
ADDRESS                                                                         
--------------------------------------------------------------------------------
MOBILE                       ID    BALANCE                                      
-------------------- ---------- ----------                                      
         3 Robert                                                               
Johnson                                                                         
789 Oak Street                                                                  
555-555-5555          555555555        750                                      
                                                                                

SQL> CREATE VIEW CustomerTransactionView AS
  2  SELECT c.account_id, c.first_name || ' ' || c.last_name AS full_name, COUNT(t.transaction_id) AS transaction_count
  3  FROM Customer c
  4  LEFT JOIN Transaction t ON c.account_id = t.from_account_id OR c.account_id = t.to_account_id
  5  GROUP BY c.account_id, c.first_name, c.last_name;

View created.

SQL> SELECT * FROM CustomerTransactionView;

ACCOUNT_ID                                                                      
----------                                                                      
FULL_NAME                                                                       
--------------------------------------------------------------------------------
TRANSACTION_COUNT                                                               
-----------------                                                               
         3                                                                      
Robert Johnson                                                                  
                1                                                               
                                                                                
         4                                                                      
Emily Brown                                                                     
                1                                                               

ACCOUNT_ID                                                                      
----------                                                                      
FULL_NAME                                                                       
--------------------------------------------------------------------------------
TRANSACTION_COUNT                                                               
-----------------                                                               
                                                                                
         1                                                                      
John Doe                                                                        
                0                                                               
                                                                                

SQL> conn  UNIV/1234;
Connected.
SQL> SELECT c.title, s.time_slot_id, t.day, t.start_hr, t.start_min, t.end_hr, t.end_min
  2  FROM course c
  3  JOIN section s ON c.course_id = s.course_id
  4  JOIN time_slot t ON s.time_slot_id = t.time_slot_id
  5  WHERE s.semester = 'Fall' AND s.year = 2017;

TITLE                                              TIME D   START_HR  START_MIN 
-------------------------------------------------- ---- - ---------- ---------- 
    END_HR    END_MIN                                                           
---------- ----------                                                           
Physical Principles                                A    M          8          0 
         8         50                                                           
                                                                                
Database System Concepts                           A    M          8          0 
         8         50                                                           
                                                                                
Physical Principles                                A    W          8          0 
         8         50                                                           
                                                                                

TITLE                                              TIME D   START_HR  START_MIN 
-------------------------------------------------- ---- - ---------- ---------- 
    END_HR    END_MIN                                                           
---------- ----------                                                           
Database System Concepts                           A    W          8          0 
         8         50                                                           
                                                                                
Physical Principles                                A    F          8          0 
         8         50                                                           
                                                                                
Database System Concepts                           A    F          8          0 
         8         50                                                           
                                                                                

TITLE                                              TIME D   START_HR  START_MIN 
-------------------------------------------------- ---- - ---------- ---------- 
    END_HR    END_MIN                                                           
---------- ----------                                                           
Intro. to Computer Science                         H    W         10          0 
        12         30                                                           
                                                                                

7 rows selected.

SQL> SELECT s.name, t.course_id
  2  FROM student s
  3  JOIN takes t ON s.ID = t.ID
  4  LEFT JOIN teaches te ON t.course_id = te.course_id
  5      AND t.sec_id = te.sec_id
  6      AND t.semester = te.semester
  7      AND t.year = te.year
  8  WHERE te.ID IS NULL;

no rows selected

SQL> SELECT d.dept_name, COUNT(*) AS student_count
  2  FROM department d
  3  JOIN student s ON d.dept_name = s.dept_name
  4  GROUP BY d.dept_name;

DEPT_NAME            STUDENT_COUNT                                              
-------------------- -------------                                              
Elec. Eng.                       2                                              
Physics                          3                                              
Comp. Sci.                       4                                              
Finance                          1                                              
Biology                          1                                              
History                          1                                              
Music                            1                                              

7 rows selected.

SQL> UPDATE classroom
  2  SET capacity = CASE
  3      WHEN capacity >= 70 THEN capacity * 1.02
  4      ELSE capacity * 1.1
  5    END;

5 rows updated.

SQL> spool off

/** this work was conducted by one and only raed oukal 20203397**/
